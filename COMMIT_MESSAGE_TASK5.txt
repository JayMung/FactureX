security: implement rate limiting for login and signup (Task 5)

Implemented client-side rate limiting to protect against brute force attacks
and signup spam using localStorage-based solution.

Changes:
- Created client-side rate limiter (src/lib/ratelimit-client.ts)
- Integrated rate limiting in Login page
- Added rate limiting for login (5 attempts / 15 min)
- Added rate limiting for signup (3 attempts / 1 hour)
- Created Edge Function template for future server-side migration
- Added comprehensive documentation

Files added:
- src/lib/ratelimit-client.ts (client-side rate limiter)
- src/lib/ratelimit-test.ts (testing utilities)
- supabase/functions/rate-limit-login/ (Edge Function template)
- RATE_LIMITING_GUIDE.md (complete guide)
- RATE_LIMITING_UPDATE.md (implementation notes)
- TASK_5_SUMMARY.md (task summary)
- UPSTASH_SETUP.md (setup instructions)

Files modified:
- src/pages/Login.tsx (integrated rate limiting)
- .env.example (added Upstash variables)
- tsconfig.json (excluded Deno functions)
- package.json (added @upstash packages)

Security improvements:
- Protection against brute force login attacks
- Protection against signup spam
- Clear error messages with reset time
- Ready for server-side migration

Note: Current implementation uses localStorage (client-side).
For production, migrate to Edge Functions for server-side validation.

Tested: âœ… Rate limiting works correctly
- Login blocked after 5 attempts
- Signup blocked after 3 attempts
- Reset time displayed correctly
